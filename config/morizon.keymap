/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEF 0
#define EXT 1
#define SYM 2
#define FUNC 3

&lt {
    tapping-term-ms = <180>;
    flavor = "tap-preferred";
};

	combos {
		compatible = "zmk,combos";
		// both outside thumb keys
		combo_accent {
			timeout-ms = <200>;
			key-positions = <58 61>;
			bindings = <&mo FUNC>;
		};
	};

 / {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &kp ESC     &kp N1     &kp N2     &kp N3     &kp N4     &kp N5                             &kp N6     &kp N7     &kp N8     &kp N9     &kp N0     &none
                &kp GRAVE   &kp Q      &kp W      &kp E      &kp R      &kp T                              &kp Y      &kp U      &kp I      &kp O      &kp P      &kp BSPC
                &kp TAB     &kp A      &kp S      &kp D      &kp F      &kp G        &none      &none      &kp H      &kp J      &kp K      &kp L      &kp SEMI   &kp ENTER
                &kp LSHFT   &kp Z      &kp X      &kp C      &kp V      &kp B        &none      &none      &kp N      &kp M      &kp COMMA  &kp DOT    &kp SLASH  &kp RSHFT
                &kp LCTRL   &kp LALT   &kp LGUI   &none      &kp SPACE  &mo EXT      &kp ENTER  &kp ESC    &mo SYM    &kp SPACE  &none      &kp RGUI   &kp RALT   &kp RCTRL
            >;
        };

        extend_layer {
            bindings = <
                &trans      &trans    &trans    &trans    &trans     &trans                               &trans     &trans     &trans     &trans     &trans    &trans
                &none       &none     &kp PSCRN &none     &none      &none                                &kp PG_UP  &kp PG_DN  &kp INS    &kp HOME   &kp END   &none 
                &none       &sk LCTRL &sk LALT  &none     &sk LSHIFT &none        &kp C_VOL_UP &trans     &kp LEFT   &kp DOWN   &kp UP     &kp RIGHT  &none     &none
                &none       &kp LC(Z) &kp LC(X) &kp LC(C) &kp LC(V)  &kp LC(B)    &kp C_VOL_DN &trans     &kp DEL    &kp BSPC   &none      &none      &none     &none
                &trans      &trans    &trans    &trans    &trans     &trans       &kp C_MUTE   &trans     &none      &trans     &trans     &trans     &trans    &trans
            >;
        };

        symbol_layer {
            bindings = <
                &trans     &none      &none      &none      &none      &none                                   &none     &none    &none     &none     &none     &none 
                &trans     &kp GRAVE  &kp SQT    &kp DQT    &kp LPAR   &kp RPAR                                &none     &kp N7   &kp N8    &kp N9    &none     &kp BSPC 
                &trans     &kp BSLH   &kp UNDER  &kp PIPE   &kp LBKT   &kp RBKT      &trans         &trans     &kp N0    &kp N4   &kp N5    &kp N6    &none     &kp ENTER
                &trans     &kp PLUS   &kp MINUS  &kp EQUAL  &kp LBRC   &kp RBRC      &trans         &trans     &kp DOT   &kp N1   &kp N2    &kp N3    &kp FSLH  &trans
                &trans     &trans     &trans     &trans     &trans     &trans        &trans         &trans     &trans    &trans   &trans    &trans    &trans    &trans
            >;
        };

        function_layer {
            bindings = <
                &trans     &kp F1     &kp F2     &kp F3     &kp F4     &kp F5                                  &kp F6    &kp F7   &kp F8    &kp F9    &kp F10   &kp F11
                &trans     &none      &none      &none      &none      &none                                   &none     &none    &none     &none     &none     &kp F12
                &trans     &none      &none      &none      &none      &none        &studio_unlock &soft_off   &none     &none    &none     &none     &none     &trans
                &trans     &none      &none      &none      &none      &none        &bt BT_NXT     &trans      &none     &none    &none     &none     &none     &trans
                &trans     &trans     &trans     &trans     &trans     &trans       &bt BT_SEL 0   &bt BT_CLR  &trans    &trans   &trans    &trans    &trans    &trans
            >;
        };
    };
};
